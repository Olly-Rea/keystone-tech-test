services:
  # Webserver services
  nginx-proxy:
    image: nginx:1.27.1-alpine
    container_name: nginx-reverse-proxy
    ports:
      - 80:80
    restart: unless-stopped
    volumes:
      - ./services/nginx/common:/etc/nginx/common:ro
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - nginx_proxy
  # Database & Redis cache
  database:
    image: mysql:8.4
    container_name: database
    restart: always
    volumes:
      - ./services/database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${ROOT_DB_PASSWORD}
    networks:
      - server_network
  redis:
    image: redis:7.4.0-alpine
    container_name: redis
    restart: always
    volumes:
      - ./services/cache:/data
    networks:
      - server_network
  # FE App
  keystone-app:
    build:
      context: app/.
    container_name: keystone-tech-test-app
    expose:
      - 80
    restart: unless-stopped
    networks:
      - nginx_proxy
  # API
  keystone-api:
    build:
      context: api/.
    container_name: keystone-tech-test-api
    depends_on:
      - database
    expose:
      - 9000
    restart: unless-stopped
    networks:
      - nginx_proxy
      - server_network

networks:
  nginx_proxy:
    name: nginx_proxy
  server_network:
    name: server_network

